name: Build Master branch
on:
  push:
    branches:
    - master
jobs:
  build:
    runs-on: ubuntu-latest
    #if: ${{github.event.head_commit.committer.username != 'web-flow' }}
    steps:
    - uses: actions/checkout@v2      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
      id: install
    - run: npm test
      id: test
    - name: Get tag
      id: image-tag
      run: |
        echo "::set-output name=tag::$(git rev-parse --short HEAD)"

    - name: build and push docker image
      id: docker
      uses: elgohr/Publish-Docker-Github-Action@v5      
      with:
        name: onboard.azurecr.io/gitopsnjs
        registry: onboard.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_TOKEN }}       
        tags: "p-${{steps.image-tag.outputs.tag}}"

    - name: Clone Gitops Repo
      id: clone-ops
      uses: actions/checkout@v2
      with:
        repository: 'rattisyam/GitOpsRepo'
        ref: 'master'
        token: ${{ secrets.GITOPS_TOKEN }}
    - name: Install dependencies
      id: install-dep
      run: |
        wget https://github.com/mikefarah/yq/releases/download/v4.6.3/yq_linux_amd64.tar.gz -O - | tar xz 
        mv yq_linux_amd64 yq
        chmod +x yq
    - name: Update "values.master.yaml"
      id: update-values
      run: |
        ./yq e '.image.tag = "p-${{steps.image-tag.outputs.tag}}"' -i nodejs/values.master.yaml
        git config --global user.email "gitopsbot@hexaware.com"
        git config --global user.name "gitopsbot"
        git commit -am "Updated values.master.yaml"
        git push origin master

    - name: Notify on success
      if: steps.install.outcome == 'success' && steps.test.outcome == 'success' && steps.docker.outcome == 'success'
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_USERNAME: 'GitOpsBot'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_ICON: 'https://gitopslogo.s3.ap-south-1.amazonaws.com/hexaware.jpg'
        SLACK_CHANNEL: devops
        SLACK_COLOR: '#58D68D'
        SLACK_TITLE: 'Changes Pushed to Production'
        SLACK_MESSAGE: 'Docker image with tag "p-${{steps.image-tag.outputs.tag}}" has been built and pushed to ACR.'
        SLACK_FOOTER: 'Hexaware GitOps platform'
    - name: Notify on failure
      if: steps.install.outcome == 'failure' || steps.test.outcome == 'failure' || steps.docker.outcome == 'failure'
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_USERNAME: 'GitOpsBot'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_ICON: 'https://gitopslogo.s3.ap-south-1.amazonaws.com/hexaware.jpg'
        SLACK_CHANNEL: devops
        SLACK_COLOR: '#EC7063'
        SLACK_TITLE: 'Changes Not Pushed to Production'
        SLACK_MESSAGE: 'Failed to build changes'
        SLACK_FOOTER: 'Hexaware GitOps platform'
